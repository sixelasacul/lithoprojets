{"version":3,"sources":["ProjectListItem.jsx","utils/fetch.js","ProjectList.jsx","ProjectDetails.jsx","utils/date.js","App.jsx","index.js"],"names":["ProjectListItem","_ref","project","icon","react_default","a","createElement","ListItem_default","button","component","Link","to","pathname","concat","code","state","ListItemIcon_default","Typography_default","variant","react_fontawesome_index_es","ListItemText_default","noWrap","name","fetchData","callback","fetch","then","response","json","data","ProjectList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","projects","_this2","setState","initialList","filter","displayed","sort","projectA","projectB","toLowerCase","prepareProjects","Grid_default","container","justify","direction","alignItems","item","gutterBottom","length","Paper_default","List_default","map","src_ProjectListItem","key","Component","ProjectDetails","location","value","hash","substring","exists","parseInt","error","shareLink","hiddenInput","React","createRef","handleSliderDragged","bind","assertThisInitialized","handleTextFieldChanged","copyToClipboard","err","document","title","some","d","undefined","initialString","partToRemove","_this3","currentHash","currentUrl","window","href","newBaseUrl","removeEnd","navigator","clipboard","writeText","console","log","catch","history","push","date","inputFormat","outputFormat","moment","locale","format","changeDateFormat","event","newValue","target","steps","process","_this$state","classes","xs","className","paper","align","description","contributors","join","spacing","TextField_default","label","onChange","type","inputProps","min","max","step","Button_default","color","onClick","iconButton","Slider_default","root","sliderRoot","sliderContainer","track","sliderTrack","thumb","directon","startDate","endDate","ref","id","hidden","withRouter","withStyles","theme","textField","palette","primary","main","padding","secondary","backgroundColor","margin","marginRight","unit","App","HashRouter","basename","Fragment","AppBar_default","position","appBar","Toolbar_default","IconButton_default","replace","GraveStone_default","grow","prefix","iconName","Switch","Route","path","Redirect","marginBottom","flexGrow","menuButton","marginLeft","darkTheme","createMuiTheme","typography","useNextVariants","blueGrey","grey","red","library","add","faGhost","faCross","faGithub","faShareAlt","ReactDOM","render","styles","CssBaseline_default","src_App","getElementById"],"mappings":"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","file":"static/js/main.ed09cdbd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ProjectListItem = ({project, icon}) => {\n\treturn (\n\t\t<li>\n\t\t\t<ListItem button component={Link} to={\n\t\t\t\t\t{\n\t\t\t\t\t\tpathname: `/${project.code}`,\n\t\t\t\t\t\tstate: { project: project }\n\t\t\t\t\t}\n\t\t\t\t}>\n\t\t\t\t{icon &&\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Typography variant=\"h4\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={icon} />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t}\n\t\t\t\t<ListItemText>\n\t\t\t\t\t<Typography variant=\"h4\" noWrap>\n\t\t\t\t\t\t{project.name}\n\t\t\t\t\t</Typography>\n\t\t\t\t</ListItemText>\n\t\t\t</ListItem>\n\t\t</li>\n\t);\n};\n\nProjectListItem.propTypes = {\n\tproject: PropTypes.shape({\n\t\tname: PropTypes.string.isRequired,\n\t\tcode: PropTypes.string.isRequired,\n\t\tdescription: PropTypes.string.isRequired,\n\t\tcontributors: PropTypes.array.isRequired,\n\t\tstartDate: PropTypes.string.isRequired,\n\t\tendDate: PropTypes.string.isRequired,\n\t\tsteps: PropTypes.array.isRequired\n\t}).isRequired,\n\ticon: PropTypes.string\n};\n\nexport default ProjectListItem;","export function fetchData(callback) {\n\tfetch('https://raw.githubusercontent.com/sixelasacul/lithoprojets/master/data/projects.json')\n\t\t.then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then((data) => {\n\t\t\tcallback(data);\n\t\t});\n}\n\nexport function returnFetchData() {\n\treturn fetch('https://raw.githubusercontent.com/sixelasacul/lithoprojets/master/data/projects.json')\n\t\t.then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then((data) => {\n\t\t\treturn data;\n\t\t});\n}\n\nexport function returnPromiseFetchData() {\n\treturn fetch('https://raw.githubusercontent.com/sixelasacul/lithoprojets/master/data/projects.json');\n}\n\nexport function fetchAndFindByCode(code, callback) {\n\tfetchData((data) => {\n\t\tdata.some((d => {\n\t\t\tif (d.code === code) {\n\t\t\t\tcallback(undefined, d);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcallback(\"Nothing found with this code: \" + code);\n\t\t\treturn false;\n\t\t}));\n\t});\n}","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ProjectListItem from './ProjectListItem';\nimport { fetchData } from './utils/fetch';\n\nclass ProjectList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprojects: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetchData((data) => {\n\t\t\tthis.setState({\n\t\t\t\tprojects: data\n\t\t\t});\n\t\t})\n\t}\n\n\tprepareProjects(initialList) {\n\t\treturn initialList.filter(project => project.displayed).sort((projectA, projectB) => {\n\t\t\tif(projectA.name.toLowerCase() < projectB.name.toLowerCase())\n\t\t\t\treturn -1\n\t\t\tif(projectA.name.toLowerCase() > projectB.name.toLowerCase())\n\t\t\t\treturn 1\n\t\t\treturn 0\n\t\t})\n\t}\n\n\trender() {\n\t\tconst projects = this.prepareProjects(this.state.projects);\n\n\t\treturn (\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography variant=\"h1\" gutterBottom>\n\t\t\t\t\t\tLithoprojets\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t{(projects && projects.length > 0) && (\n\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t{projects.map(project => {\n\t\t\t\t\t\t\t\t\treturn <ProjectListItem project={project} icon=\"cross\" key={project.code} />\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nexport default ProjectList;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Slider from \"@material-ui/lab/Slider\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport { fetchAndFindByCode } from \"./utils/fetch\";\nimport { changeDateFormat } from \"./utils/date\";\n\nconst styles = theme => ({\n\ttextField: {\n\t\tcolor: theme.palette.primary.main\n\t},\n\tsliderRoot: {\n\t\tpadding: \"22px 0px\"\n\t},\n\tsliderContainer: {\n\t\tcolor: theme.palette.secondary.main\n\t},\n\tsliderTrack: {\n\t\tbackgroundColor: theme.palette.primary.main\n\t},\n\tpaper: {\n\t\tmargin: \"40px 0px\",\n\t\tpadding: \"25px\"\n\t},\n\ticonButton: {\n\t\tmarginRight: theme.spacing.unit\n\t}\n});\n\nclass ProjectDetails extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst project = (this.props.location.state && this.props.location.state.project);\n\t\tconst value = (this.props.location.hash && this.props.location.hash.substring(1)) || 0;\n\t\tthis.state = {\n\t\t\tproject: project,\n\t\t\texists: true,\n\t\t\tvalue: parseInt(value),\n\t\t\terror: false\n\t\t}\n\t\tthis.shareLink = \"\"\n\t\tthis.hiddenInput = React.createRef()\n\t\tthis.handleSliderDragged = this.handleSliderDragged.bind(this);\n\t\tthis.handleTextFieldChanged = this.handleTextFieldChanged.bind(this);\n\t\tthis.copyToClipboard = this.copyToClipboard.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (!this.state.project) {\n\t\t\tfetchAndFindByCode(this.props.location.pathname.substring(1), (err, data) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tproject: data\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tdocument.title = this.state.project.name\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\texists: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tremoveEnd(initialString, partToRemove) {\n\t\treturn initialString.substring(0, initialString.length - partToRemove.length)\n\t}\n\n\tcopyToClipboard() {\n\t\tconst currentHash = this.props.location.hash;\n\t\tconst currentUrl = window.location.href;\n\t\tconst newBaseUrl = this.removeEnd(currentUrl, currentHash);\n\t\tthis.shareLink = newBaseUrl + \"#\" + this.state.value;\n\t\tnavigator.clipboard.writeText(this.shareLink)\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(\"Copié: \", this.shareLink);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(\"Impossible d'écrire dans le presse-papier: \", err);\n\t\t\t\tthis.props.history.push(this.shareLink);\n\t\t\t});\n\t}\n\n\tchangeDateFormat(date) {\n\t\treturn changeDateFormat(date, \"DD/MM/YYYY\", \"MMMM YYYY\");\n\t}\n\n\thandleSliderDragged(event, value) {\n\t\tthis.setState({\n\t\t\tvalue\n\t\t});\n\t}\n\n\thandleTextFieldChanged(event) {\n\t\tconst newValue = parseInt(event.target.value);\n\t\tif (newValue < this.state.project.steps.length && newValue >= 0) {\n\t\t\tthis.setState({\n\t\t\t\tvalue: parseInt(event.target.value),\n\t\t\t\terror: false\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\terror: true\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconsole.log(process.env.PUBLIC_URL);\n\t\tconsole.log(this.props);\n\t\tconst { project, value, error, shareLink } = this.state;\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{project &&\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Typography variant=\"h1\" gutterBottom>\n\t\t\t\t\t\t\t\t{project.name}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"left\">\n\t\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" align=\"right\">\n\t\t\t\t\t\t\t\t\t{project.description}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" align=\"left\">\n\t\t\t\t\t\t\t\t\tContributeurs\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" align=\"right\">\n\t\t\t\t\t\t\t\t\t{project.contributors.sort().join(\", \")}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<Grid container direction=\"column\" spacing={16}>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Étape\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleTextFieldChanged}\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tmin: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmax: project.steps.length - 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstep: 1\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"standard\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" onClick={this.copyToClipboard}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"share-alt\" className={classes.iconButton} />\n\t\t\t\t\t\t\t\t\t\t\t\tPartager\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\t\t\tmax={project.steps.length - 1}\n\t\t\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\t\t\t\t\troot: classes.sliderRoot,\n\t\t\t\t\t\t\t\t\t\t\t\tcontainer: classes.sliderContainer,\n\t\t\t\t\t\t\t\t\t\t\t\ttrack: classes.sliderTrack\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSliderDragged}\n\t\t\t\t\t\t\t\t\t\t\tthumb={<FontAwesomeIcon icon=\"ghost\" />}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<Grid container directon=\"row\" justify=\"space-around\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography align=\"left\" variant=\"body2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.changeDateFormat(project.startDate)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography align=\"center\" variant=\"body1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{project.steps[value]}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography align=\"right\" variant=\"body2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.changeDateFormat(project.endDate)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<input ref={this.hiddenInput} id=\"share\" value={shareLink} onChange={()=>{}} hidden />\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t\t{!project && !this.state.exists &&\n\t\t\t\t\t<p>Pas trouvé</p>\n\t\t\t\t}\n\t\t\t\t{!project && this.state.exists &&\n\t\t\t\t\t<p>Wait for it</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nProjectDetails.propTypes = {\n\tlocation: PropTypes.object,\n\tproject: PropTypes.shape({\n\t\tname: PropTypes.string.isRequired,\n\t\tcode: PropTypes.string.isRequired,\n\t\tdescription: PropTypes.string.isRequired,\n\t\tcontributors: PropTypes.array.isRequired,\n\t\tstartDate: PropTypes.string.isRequired,\n\t\tendDate: PropTypes.string.isRequired,\n\t\tsteps: PropTypes.array.isRequired\n\t}),\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(ProjectDetails));","import moment from 'moment';\n\nexport function changeDateFormat(date, inputFormat, outputFormat) {\n\tmoment.locale('fr');\n\tconst dateWithInputFormat = moment(date, inputFormat);\n\treturn dateWithInputFormat.format(outputFormat);\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HashRouter, Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport GraveStone from \"mdi-material-ui/GraveStone\";\nimport ProjectList from \"./ProjectList\"\nimport ProjectDetails from \"./ProjectDetails\"\n\nconst styles = {\n\tappBar: {\n\t\tmarginBottom: \"20px\"\n\t},\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tmarginLeft: -12,\n\t\tmarginRight: 20,\n\t}\n};\n\nclass App extends Component {\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<HashRouter basename=\"/\">\n\t\t\t\t\t<>\n\t\t\t\t\t\t<AppBar position=\"static\" color=\"secondary\" classes={{ root: classes.appBar }}>\n\t\t\t\t\t\t\t<ToolBar>\n\t\t\t\t\t\t\t\t<IconButton component={Link} to=\"/\" replace>\n\t\t\t\t\t\t\t\t\t<GraveStone />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.grow}>\n\t\t\t\t\t\t\t\t\tLithoprojets\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<IconButton href=\"https://github.com/sixelasacul/lithoprojets\" target=\"_blank\">\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={{ prefix: \"fab\", iconName: \"github\" }} />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</ToolBar>\n\t\t\t\t\t\t</AppBar>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/:id\" component={ProjectDetails} />\n\t\t\t\t\t\t\t<Route path=\"/\" component={ProjectList} />\n\t\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nApp.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport red from '@material-ui/core/colors/red';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGhost, faCross, faShareAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport App from './App';\n\nconst darkTheme = createMuiTheme({\n\ttypography: {\n\t\tuseNextVariants: true\n\t},\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: blueGrey[900]\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: grey[900]\n\t\t},\n\t\terror: {\n\t\t\tmain: red[900]\n\t\t},\n\t\ttype: \"dark\"\n\t}\n});\n\nlibrary.add(faGhost, faCross, faGithub, faShareAlt);\n\nReactDOM.render(\n\t<MuiThemeProvider theme={darkTheme}>\n\t\t<CssBaseline />\n\t\t<App />\n\t</MuiThemeProvider>,\n\tdocument.getElementById('root'));"],"sourceRoot":""}